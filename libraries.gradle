// Allows centralized definition of the version of artifacts to
// use.  In that respect it serves a role similar to <dependencyManagement> in Maven
ext {
    junitVersion = '4.12'
    slf4jVersion = '1.7.24'
    assertjVersion = '3.6.2'
    logbackVersion = '1.2.3'
    mockitoVersion = '1.10.19'
    rabbitmqVersion = '4.1.0'
    vertxVersion = '3.4.1'
    prometheusVersion = '0.0.21'
    testcontainersVersion = '1.2.1'
    okHttpVersion = '3.7.0'
    concurrentunitVersion = '0.4.2'

    libraries = [
            // compile
            slf4j: "org.slf4j:slf4j-api:${slf4jVersion}",
            rabbitmq_client: "com.rabbitmq:amqp-client:${rabbitmqVersion}",

            // testCompile
            junit:           "junit:junit:${junitVersion}",
            assertj: "org.assertj:assertj-core:${assertjVersion}",
            logback: "ch.qos.logback:logback-classic:${logbackVersion}",
            mockito: "org.mockito:mockito-core:${mockitoVersion}",
            testcontainers: "org.testcontainers:testcontainers:${testcontainersVersion}",
            okhttp: "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            concurrentunit: "net.jodah:concurrentunit:${concurrentunitVersion}",

            vertx_unit: "io.vertx:vertx-unit:${vertxVersion}",


            // Vert.x addon
            vertx_core: "io.vertx:vertx-core:${vertxVersion}",
            vertx_config: "io.vertx:vertx-config:${vertxVersion}",
            vertx_metrics: "io.vertx:vertx-dropwizard-metrics:${vertxVersion}",
            vertx_web: "io.vertx:vertx-web:${vertxVersion}",
            vertx_web_client: "io.vertx:vertx-web-client:${vertxVersion}",
            vertx_health_check: "io.vertx:vertx-health-check:${vertxVersion}",

            // Prometheus addon
            prometheus: "io.prometheus:simpleclient_common:${prometheusVersion}",
            prometheus_dropwizard: "io.prometheus:simpleclient_dropwizard:${prometheusVersion}"


    ]
}
